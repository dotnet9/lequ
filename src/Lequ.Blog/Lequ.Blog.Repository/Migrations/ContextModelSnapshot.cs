// <auto-generated />
using System;
using Lequ.Blog.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lequ.Blog.Repository.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0-rc.2.21480.5");

            modelBuilder.Entity("BlogCategory", b =>
                {
                    b.Property<int>("BlogsID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriesID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BlogsID", "CategoriesID");

                    b.HasIndex("CategoriesID");

                    b.ToTable("BlogCategory");
                });

            modelBuilder.Entity("Lequ.Blog.Model.Models.About", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image2")
                        .HasColumnType("TEXT");

                    b.Property<string>("MapLocation")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("Lequ.Blog.Model.Models.Blog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ThumbnailImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserInfoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("UserInfoID");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Content = "test content 0",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7789),
                            Status = true,
                            Title = "test title 0"
                        },
                        new
                        {
                            ID = 2,
                            Content = "test content 1",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7794),
                            Status = true,
                            Title = "test title 1"
                        },
                        new
                        {
                            ID = 3,
                            Content = "test content 2",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7796),
                            Status = true,
                            Title = "test title 2"
                        },
                        new
                        {
                            ID = 4,
                            Content = "test content 3",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7798),
                            Status = true,
                            Title = "test title 3"
                        },
                        new
                        {
                            ID = 5,
                            Content = "test content 4",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7800),
                            Status = true,
                            Title = "test title 4"
                        },
                        new
                        {
                            ID = 6,
                            Content = "test content 5",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7804),
                            Status = true,
                            Title = "test title 5"
                        },
                        new
                        {
                            ID = 7,
                            Content = "test content 6",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7805),
                            Status = true,
                            Title = "test title 6"
                        },
                        new
                        {
                            ID = 8,
                            Content = "test content 7",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7807),
                            Status = true,
                            Title = "test title 7"
                        },
                        new
                        {
                            ID = 9,
                            Content = "test content 8",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7809),
                            Status = true,
                            Title = "test title 8"
                        },
                        new
                        {
                            ID = 10,
                            Content = "test content 9",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7812),
                            Status = true,
                            Title = "test title 9"
                        },
                        new
                        {
                            ID = 11,
                            Content = "test content 10",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7814),
                            Status = true,
                            Title = "test title 10"
                        },
                        new
                        {
                            ID = 12,
                            Content = "test content 11",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7815),
                            Status = true,
                            Title = "test title 11"
                        },
                        new
                        {
                            ID = 13,
                            Content = "test content 12",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7817),
                            Status = true,
                            Title = "test title 12"
                        },
                        new
                        {
                            ID = 14,
                            Content = "test content 13",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7819),
                            Status = true,
                            Title = "test title 13"
                        },
                        new
                        {
                            ID = 15,
                            Content = "test content 14",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7820),
                            Status = true,
                            Title = "test title 14"
                        },
                        new
                        {
                            ID = 16,
                            Content = "test content 15",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7822),
                            Status = true,
                            Title = "test title 15"
                        },
                        new
                        {
                            ID = 17,
                            Content = "test content 16",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7824),
                            Status = true,
                            Title = "test title 16"
                        },
                        new
                        {
                            ID = 18,
                            Content = "test content 17",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7827),
                            Status = true,
                            Title = "test title 17"
                        },
                        new
                        {
                            ID = 19,
                            Content = "test content 18",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7828),
                            Status = true,
                            Title = "test title 18"
                        },
                        new
                        {
                            ID = 20,
                            Content = "test content 19",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7830),
                            Status = true,
                            Title = "test title 19"
                        });
                });

            modelBuilder.Entity("Lequ.Blog.Model.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ParentID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7720),
                            Name = "C#",
                            Status = true
                        });
                });

            modelBuilder.Entity("Lequ.Blog.Model.Models.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BlogID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("BlogID");

                    b.HasIndex("ParentID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Lequ.Blog.Model.Models.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subject")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Lequ.Blog.Model.Models.NewsLetter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("NewsLetters");
                });

            modelBuilder.Entity("Lequ.Blog.Model.Models.UserInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("About")
                        .HasColumnType("TEXT");

                    b.Property<string>("Account")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("UserInfos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            About = "Coder",
                            Account = "Lequ.CO",
                            CreateBy = 1,
                            CreateDate = new DateTime(2021, 10, 29, 13, 3, 10, 616, DateTimeKind.Local).AddTicks(7582),
                            Email = "1012434131@qq.com",
                            Name = "Lequ.CO",
                            Password = "Lequ.CO",
                            Status = true
                        });
                });

            modelBuilder.Entity("BlogCategory", b =>
                {
                    b.HasOne("Lequ.Blog.Model.Models.Blog", null)
                        .WithMany()
                        .HasForeignKey("BlogsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lequ.Blog.Model.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lequ.Blog.Model.Models.Blog", b =>
                {
                    b.HasOne("Lequ.Blog.Model.Models.UserInfo", null)
                        .WithMany("Blogs")
                        .HasForeignKey("UserInfoID");
                });

            modelBuilder.Entity("Lequ.Blog.Model.Models.Category", b =>
                {
                    b.HasOne("Lequ.Blog.Model.Models.Category", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentID");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Lequ.Blog.Model.Models.Comment", b =>
                {
                    b.HasOne("Lequ.Blog.Model.Models.Blog", "Blog")
                        .WithMany("Comments")
                        .HasForeignKey("BlogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lequ.Blog.Model.Models.Comment", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentID");

                    b.Navigation("Blog");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Lequ.Blog.Model.Models.Blog", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Lequ.Blog.Model.Models.UserInfo", b =>
                {
                    b.Navigation("Blogs");
                });
#pragma warning restore 612, 618
        }
    }
}
